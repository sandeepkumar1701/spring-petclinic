name: Java CI with maven
on:
  push:
    branches: [ "main"]
env:
  IMAGE_NAME: "spring-maven-app"
  DOCKERHUB_USERNAME: "sandeep1796"
jobs:
  build:
     runs-on: ubuntu-latest
     steps:
     - name: Checkout SCM
       uses: actions/checkout@v3
     - name: list workspace contents
       run: ls -al ${{ github.workspace }}
     - name: setup java and maven
       uses: actions/setup-java@v4
       with:
         distribution: 'temurin'
         java-version: '17'
     - name: check java and mvn version
       run: /
         java -version
         mvn --version
     - name: run test
       run: mvn test
     - name: package the applications
       run: /
          mvn -B package
          ls -al ${{ github.workspace }}/target
     - name: upload the jar file
       uses: actions/upload-artifact@v4
       with:
          name: jar-file
          path: target/*.jar
          if-no-files-found: 'error'
          retention-days: 1 day
  dockerize: 
      runs-on: ubuntu-latest
      steps:
      - name: Download the jar file
        uses: actions/download-artifact@v4
        with:
           name: jar-file
           path: target
      - name: check the jar file
        run: ls -al  ${{ github.workspace }}/target/*.jar
      - name: dockerize the application
        run: docker build -t ${{ env.DOCKERHUB_USERNAME}}/${{ env.IMAGE_NAME}}:${{ github.run_number}} .
      - name: save the application as tar file
        run: docker save ${{ env.DOCKERHUB_USERNAME}}/${{ env.IMAGE_NAME}}:${{ github.run_number}} > ${{ github.workspace }}/${{ env.IMAGE_NAME}}.tar
      - name: upload the image tar file
        uses: actions/upload-artifact@v4
        with:
          name: jar-file
          path: ${{ github.workspace }}/${{ env.IMAGE_NAME}}.tar
          if-no-files-found: 'error'
          retention-days: 1 day 


  upload_to_dockerhub:
      runs-on: ubuntu-latest
      steps: 
      - name: Download the image tar file
        uses: actions/download-artifact@v4
        with:
           name: tar-file
      - name: load the image from tar file
        run: docker load <  ${{ github.workspace }}/${{ env.IMAGE_NAME}}.tar
      - name: Login to docker hub 
        uses: docker/login-action@v3 
        with: 
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: push the images
        run: docker push ${{ env.DOCKERHUB_USERNAME}}/${{ env.IMAGE_NAME}}:${{ github.run_number}}
